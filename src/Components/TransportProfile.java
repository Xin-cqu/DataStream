// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Components.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Components;

public class TransportProfile implements Cloneable, java.io.Serializable
{
    public String tag;//only TCP

    public boolean complete;//ignore

    public String properties;//ip and ip_port for TCP

    public byte[] transportParameter; //ignore

    public TransportProfile()
    {
    }

    public TransportProfile(String tag, boolean complete, String properties, byte[] transportParameter)
    {
        this.tag = tag;
        this.complete = complete;
        this.properties = properties;
        this.transportParameter = transportParameter;
    }

    public boolean
    equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TransportProfile _r = null;
        if(rhs instanceof TransportProfile)
        {
            _r = (TransportProfile)rhs;
        }

        if(_r != null)
        {
            if(tag != _r.tag)
            {
                if(tag == null || _r.tag == null || !tag.equals(_r.tag))
                {
                    return false;
                }
            }
            if(complete != _r.complete)
            {
                return false;
            }
            if(properties != _r.properties)
            {
                if(properties == null || _r.properties == null || !properties.equals(_r.properties))
                {
                    return false;
                }
            }
            if(!java.util.Arrays.equals(transportParameter, _r.transportParameter))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::Components::TransportProfile");
        __h = IceInternal.HashUtil.hashAdd(__h, tag);
        __h = IceInternal.HashUtil.hashAdd(__h, complete);
        __h = IceInternal.HashUtil.hashAdd(__h, properties);
        __h = IceInternal.HashUtil.hashAdd(__h, transportParameter);
        return __h;
    }

    public Object
    clone()
    {
        Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(tag);
        __os.writeBool(complete);
        __os.writeString(properties);
        TransportParametersHelper.write(__os, transportParameter);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        tag = __is.readString();
        complete = __is.readBool();
        properties = __is.readString();
        transportParameter = TransportParametersHelper.read(__is);
    }

    public static final long serialVersionUID = 4339709094236886095L;
}
